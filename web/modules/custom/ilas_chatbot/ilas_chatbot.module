<?php

/**
 * @file
 * Contains ilas_chatbot.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\Core\Form\FormStateInterface;

/**
 * Implements hook_help().
 */
function ilas_chatbot_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    case 'help.page.ilas_chatbot':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('The ILAS Chatbot module integrates Google Dialogflow to provide conversational AI assistance for legal aid services.') . '</p>';
      $output .= '<h3>' . t('Configuration') . '</h3>';
      $output .= '<ol>';
      $output .= '<li>' . t('Go to Configuration > ILAS Chatbot Settings to configure the module') . '</li>';
      $output .= '<li>' . t('Create a Dialogflow agent in Google Cloud Console') . '</li>';
      $output .= '<li>' . t('Configure intents for legal categories') . '</li>';
      $output .= '<li>' . t('Add the Chatbot block to your site') . '</li>';
      $output .= '</ol>';
      $output .= '<h3>' . t('Features') . '</h3>';
      $output .= '<ul>';
      $output .= '<li>' . t('Responsive design with mobile optimization') . '</li>';
      $output .= '<li>' . t('Form integration with webform embedding') . '</li>';
      $output .= '<li>' . t('Accessibility compliance') . '</li>';
      $output .= '<li>' . t('Security validation for form URLs') . '</li>';
      $output .= '</ul>';
      return $output;
  }
}

/**
 * Implements hook_page_attachments().
 */
function ilas_chatbot_page_attachments(array &$attachments) {
  // Check if chatbot should be loaded globally
  $config = \Drupal::config('ilas_chatbot.settings');
  
  if ($config->get('load_globally') && $config->get('agent_id')) {
    $attachments['#attached']['library'][] = 'ilas_chatbot/chatbot';
    $attachments['#attached']['drupalSettings']['ilasChatbot'] = [
      'agentId' => $config->get('agent_id'),
      'languageCode' => $config->get('language_code') ?: 'en',
      'welcomeIntent' => $config->get('welcome_intent') ?: 'WELCOME',
      'formMappings' => $config->get('form_mappings') ?: [],
      'trustedDomains' => $config->get('trusted_domains') ?: [],
      'enableAnalytics' => $config->get('enable_analytics') ?: TRUE,
    ];
  }
}

/**
 * Implements hook_theme().
 */
function ilas_chatbot_theme() {
  return [
    'ilas_chatbot_block' => [
      'variables' => [
        'agent_id' => NULL,
        'language_code' => NULL,
      ],
    ],
    'ilas_chatbot_embedded_form' => [
      'variables' => [
        'content' => NULL,
        'webform_id' => NULL,
      ],
    ],
  ];
}

/**
 * Implements hook_form_FORM_ID_alter() for system_performance_settings.
 */
function ilas_chatbot_form_system_performance_settings_alter(&$form, FormStateInterface $form_state) {
  // Add note about chatbot caching
  $form['caching']['cache_note'] = [
    '#type' => 'item',
    '#markup' => t('<strong>Note:</strong> The ILAS Chatbot loads external resources that are cached independently.'),
    '#weight' => -10,
  ];
}

/**
 * Validates chatbot configuration.
 */
function ilas_chatbot_validate_config($config) {
  $errors = [];
  
  // Validate agent ID format
  if ($config['agent_id'] && !preg_match('/^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$/', $config['agent_id'])) {
    $errors[] = t('Agent ID must be a valid UUID format.');
  }
  
  // Validate language code
  $valid_languages = ['en', 'es', 'fr', 'de', 'it', 'pt', 'ja', 'ko', 'zh'];
  if ($config['language_code'] && !in_array($config['language_code'], $valid_languages)) {
    $errors[] = t('Language code must be one of: @languages', ['@languages' => implode(', ', $valid_languages)]);
  }
  
  // Validate form mappings URLs
  if (!empty($config['form_mappings'])) {
    foreach ($config['form_mappings'] as $type => $url) {
      if (!filter_var($url, FILTER_VALIDATE_URL)) {
        $errors[] = t('Invalid URL for form mapping "@type": @url', ['@type' => $type, '@url' => $url]);
      }
    }
  }
  
  return $errors;
}

/**
 * Gets default chatbot configuration.
 */
function ilas_chatbot_get_default_config() {
  return [
    'agent_id' => '',
    'language_code' => 'en',
    'welcome_intent' => 'WELCOME',
    'load_globally' => FALSE,
    'enable_analytics' => TRUE,
    'form_mappings' => [
      'eviction' => '/webform/eviction_assistance',
      'divorce' => '/webform/divorce_custody',
      'benefits' => '/webform/benefits_appeal',
      'small_claims' => '/webform/small_claims',
    ],
    'trusted_domains' => [
      'forms.idaholegalaid.org',
      'webforms.idaholegalaid.org',
    ],
  ];
}